能用docker，就别用源码或者yum安装，省事。

#########################################################################################################
Docker
docker安装 && 升级
#########################################################################################################
yum remove docker \
           docker-client \
           docker-client-latest \
           docker-common \
           docker-latest \
           docker-latest-logrotate \
           docker-logrotate \
           docker-engine
yum install -y yum-utils \
  device-mapper-persistent-data \
  lvm2
yum-config-manager \
    --add-repo \
    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
yum update -y && yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin
systemctl start docker
systemctl enable docker
curl -L "https://github.com/docker/compose/releases/download/v2.26.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
docker-compose version


########################################################################################################
MySql
docker安装
########################################################################################################
docker search mysql
docker pull mysql:latest
docker images
docker run --restart=always -itd --name mysql-test -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root mysql
docker ps
docker exec -it mysql-test bash
mysql -h localhost -u root -p


#########################################################################################################
Redis
docker安装（有bloom过滤器）
#########################################################################################################
docker search redis
docker pull redis/redis-stack-server:latest
docker images
docker run --restart=always -itd --name redis-test -p 6379:6379 redis/redis-stack-server
docker ps
docker exec -it redis-test bash
redis-cli


#########################################################################################################
Mongodb
docker安装
#########################################################################################################
docker search mongo
docker pull mongo:latest
docker images
docker run --restart=always -itd --name mongo-test -p 27017:27017 mongo
docker ps
docker exec -it mongo-test bash

单机多副本
mkdir /software/mongodb/config1
mkdir /software/mongodb/config2
mkdir /software/mongodb/config3
mkdir /software/mongodb/shard1
mkdir /software/mongodb/shard2
mkdir /software/mongodb/shard3

vim fates-mongo-compose.yaml
vim deploy-and-start.sh
bash deploy-and-start.sh

#########################################################################################################
Elasticsearch
docker安装
#########################################################################################################
docker search elasticsearch
docker pull elasticsearch:7.12.0 # 必须指定版本号，和Kibana相同
docker images
docker run --restart=always -itd --name es-test -p 9400:9200 -p 9500:9300 -e "discovery.type=single-node" -e ES_JAVA_OPTS="-Xms512m -Xmx512m" elasticsearch:7.12.0
docker ps
docker exec -it es-test bash


#########################################################################################################
Kibana
docker安装
#########################################################################################################
docker search kibana
docker pull kibana:7.12.0
docker images
docker run --restart=always -itd --name kibana-test --link=es-test -p 6601:5601 kibana:7.12.0
docker ps
docker exec -it kibana-test bash
cd config
vi kibana.yml
--elasticsearch.hosts: [ "http://172.17.0.4:9200" ]
// kibana版本号要和elasticsearch相同，且kibana.yml es host地址要设置对
docker inspect es-test | grep "IPAddress"
docker restart kibana-test
测试数据下载
https://github.com/elastic/elasticsearch/blob/v6.8.18/docs/src/test/resources/accounts.json
curl -H "Content-Type: application/json" -XPOST "localhost:9400/bank/_bulk?pretty&refresh" --data-binary "@/home/heshi/Downloads/accounts.json"
curl "localhost:9400/_cat/indices?v=true" | grep bank

##########################################################################################################
Nginx
docker安装
##########################################################################################################
docker pull nginx:latest
mkdir -p /home/heshi/data/software/nginx/conf
mkdir -p /home/heshi/data/software/nginx/log
docker run -itd --name nginx-test -p 9090:80 nginx
docker cp nginx-test:/etc/nginx/nginx.conf ~/data/software/nginx/conf/nginx.conf
docker cp nginx-test:/etc/nginx/conf.d ~/data/software/nginx/conf/conf.d
docker cp nginx-test:/usr/share/nginx/html ~/data/software/nginx/
docker stop nginx-test
docker rm nginx-test
docker run --restart=always -itd --name nginx-test -p 9090:80 -v /home/heshi/data/software/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /home/heshi/data/software/nginx/conf/conf.d:/etc/nginx/conf.d -v /home/heshi/data/software/nginx/html:/usr/share/nginx/html -v /home/heshi/data/software/nginx/log:/var/log/nginx nginx
docker exec -it nginx-test bash

##########################################################################################################
nodejs install
##########################################################################################################
curl -fsSL https://rpm.nodesource.com/setup_16.x | bash -
yum install -y nodejs

##########################################################################################################
nodejs mongoose install
##########################################################################################################
-- cd your project dir
npm i -S mongoose
