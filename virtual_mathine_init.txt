#########创建虚拟机#####################
开启双网卡，第一个Nat模式，第二个仅主机模式
注意：装系统的时候要把网络开关打开，要不系统启动后无法链接外网
注意：仅主机模式本地主机可以连虚拟机，但虚拟机无法直接ping通主机，但无所谓，ssh能登进去就行。

#########设置网卡信息##################
vi /etc/sysconfig/network-scripts/ifcfg-enp0s8
+++++
TYPE=Ethernet
BOOTPROTO=static
NAME=enp0s3
DEVICE=enp0s3
ONBOOT=yes
IPADDR=192.168.56.100
NETMASK=255.255.255.0
GATEWAY=192.168.56.1
DNS1=8.8.8.8
+++++

#######网络 && 安全################
systemctl stop firewalld
systemctl disable firewalld
vi /etc/selinux/config 
+++++
SELINUX=disabled
+++++
systemctl restart network

#######修改yum源#############
yum install wget
mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo
vi /etc/yum.repos.d/CentOS-Base.repo
>>>> %s/$releasever/7/g 
yum clean all
yum makecache 

########安装相关软件#######
yum update
yum install -y vim net-tools unzip wget
yum groupinstall "Development Tools"

############bazel安装###########
vim /etc/yum.repos.d/vbatts-bazel-epel-7.repo
+++++
[copr:copr.fedorainfracloud.org:vbatts:bazel]
name=Copr repo for bazel owned by vbatts
baseurl=https://download.copr.fedorainfracloud.org/results/vbatts/bazel/epel-7-$basearch/
type=rpm-md
skip_if_unavailable=True
gpgcheck=1
gpgkey=https://download.copr.fedorainfracloud.org/results/vbatts/bazel/pubkey.gpg
repo_gpgcheck=0
enabled=1
enabled_metadata=1
+++++
yum install bazel4

############g++安装#############
yum install -y centos-release-scl-rh
出错时可以尝试如下：
cd /etc/yum.repos.d/
mv CentOS-SCLo-scl.repo CentOS-SCLo-scl.repo.bak
mv CentOS-SCLo-scl-rh.repo CentOS-SCLo-scl-rh.repo.bak、
vim CentOS-SCLo-rh.repo
[centos-sclo-rh]
name=CentOS-7 - SCLo rh
baseurl=https://mirrors.aliyun.com/centos/7/sclo/x86_64/rh/
gpgcheck=1
enabled=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-SCLo
------------------------------------
yum install -y devtoolset-11-libstdc++-devel
yum install -y devtoolset-11-build
yum install -y devtoolset-11-gdb
yum install -y devtoolset-11-gcc devtoolset-11-gcc-c++
source /opt/rh/devtoolset-11/enable
vim /etc/profile
+++++
source /opt/rh/devtoolset-11/enable
+++++
gcc -v
g++ -v

###########cmake安装###############
wget https://github.com/Kitware/CMake/releases/download/v3.28.1/cmake-3.28.1.tar.gz
tar -zxvf cmake-3.28.1.tar.gz
rm -f cmake-3.28.1.tar.gz 
cd cmake-3.28.1
./bootstrap && make -j4 && make install

##########protobuf安装#############
wget https://github.com/protocolbuffers/protobuf/releases/download/v21.9/protobuf-all-21.9.tar.gz
tar zxvf protobuf-all-21.9.tar.gz
cd protobuf-21.9/
./autogen.sh
./configure -prefix=/usr/local/
make
make check
make install
protoc --version

###########MySQL++安装###########
# 参考：https://blog.csdn.net/liangwenhao1108/article/details/112300204
yum install mysql-devel
wget https://tangentsoft.com/mysqlpp/releases/mysql++-3.3.0.tar.gz
tar -zxvf mysql++-3.3.0.tar.gz
cd mysql++-3.3.0
./configure
make
make install
vim /etc/ld.so.conf
    末尾添加 /usr/local/lib  保存
ldconfig

###########Git更新###########
wget https://github.com/git/git/archive/v2.43.0.tar.gz
yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker
yum remove git
git --version
tar -zxvf v2.43.0.tar.gz
cd git-2.43.0
make prefix=/usr/local/git all
make prefix=/usr/local/git install
vim /etc/profile
 	   export PATH=$PATH:/usr/local/git/bin
source  /etc/profile
git --version

###########Python3 && Python2共存################
yum -y install sqlite*
yum install libffi-devel -y
yum install -y bzip2-devel
mkdir -p /opt/python3 
cd /opt/python3/ 
wget  https://www.python.org/ftp/python/3.9.5/Python-3.9.5.tar.xz 
tar -xvf Python-3.9.5.tar.xz 
cd Python-3.9.5/ 
./configure --prefix=/usr/local/python3 
make && make install
ln -s /usr/local/python3/bin/python3.9 /usr/local/bin/python3
ln -s /usr/local/python3/bin/pip3.9 /usr/local/bin/pip3
python3 -m pip install --upgrade pip
pip3 install ipython
ln -s /usr/local/python3/bin/ipython /usr/local/bin/ipython
pip3 install jupyter
ln -s /usr/local/python3/bin/jupyter /usr/local/bin/jupyter

##########Boost install##########################
mkdir -p /opt/boost
cd /opt/boost
wget https://boostorg.jfrog.io/artifactory/main/release/1.81.0/source/boost_1_81_0.tar.gz
tar -xvf boost_1_81_0.tar.bz2
cd ./boost_1_81_0
./bootstrap.sh
./b2 install

##########quantization########################
pip3 install pandas
pip3 install matplotlib
pip3 install akshare -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host=mirrors.aliyun.com  --upgrade

############libco install##############################
git clone https://github.com/Tencent/libco.git
cd libco
make
mkdir /usr/include/libco
cp *.h /usr/include
cp lib/libcolib.a /usr/local/lib
cp libcolib.so /usr/local/lib
编译用法 g++ main.cpp -o app -L -L/usr/local/lib -lcolib

#################libgo install################
git clone https://github.com/yyzybb537/libgo.git
cd libgo
mkdir build
cd build
cmake -DBUILD_DYNAMIC=true -DCMAKE_INSTALL_PREFIX=/usr/local/libgo ..
make -j10
make install
cp -r /usr/local/libgo/include/libgo /usr/include/libgo
cp /usr/local/libgo/lib/* /usr/local/lib/

###############redis install########################
wget wget http://download.redis.io/releases/redis-7.0.11.tar.gz
tar -zxvf redis-7.0.11.tar.gz -C /usr/local && cd /usr/local/redis-7.0.11
make && make PREFIX=/usr/local/redis-7.0.11 install
./bin/redis-server& ./redis.conf
./bin/redis-cli
    shutdown
cd /opt && mkdir hiredis && cd hiredis
wget https://github.com/redis/hiredis/archive/refs/tags/v1.1.0.tar.gz
tar -zxvf v1.1.0.tar.gz
cd cd hiredis-1.1.0/
make && make install

###############tensorflow install####################

####################GoogleTest#######################
wget https://github.com/google/googletest/archive/refs/tags/v1.14.0.tar.gz
tar -zxvf googletest-1.14.0.tar.gz 
cd googletest-1.14.0
cmake CMakeLists.txt
make && make install

#################g++升级11以上######################
还未验证，等需要再说
wget https://ftp.gnu.org/gnu/gcc/gcc-14.1.0/gcc-14.1.0.tar.gz
tar -xzvf gcc-14.1.0.tar.gz
cd gcc-14.1.0
./configure --disable-multilib --enable-languages=c,c++
make -j 4 && make install

#################libstdc++3.4.25##################
wget http://ftp.de.debian.org/debian/pool/main/g/gcc-8/libstdc++6_8.3.0-6_amd64.deb
ar -x libstdc++6_8.3.0-6_amd64.deb
tar -xf data.tar.xz
cd usr/lib/x86_64-linux-gnu
cp libstdc++.so.6.0.25 /usr/lib64/libstdc++.so.6.0.25
ln -sf /usr/lib64/libstdc++.so.6.0.25 /usr/lib64/libstdc++.so.6
strings /usr/lib64/libstdc++.so.6 | grep GLIBCXX

##################make##############################
make --version
wget http://ftp.gnu.org/pub/gnu/make/make-4.3.tar.gz
tar -xzvf make-4.3.tar.gz
cd make-4.3/
mkdir build&&cd build
../configure --prefix=/usr/
bash build.sh
make install
make --version

###################glibc###########################
gcc需要降级到8，用完别忘再升级回来
strings /lib64/libc.so.6 | grep -E "^GLIBC" | sort -V -r | uniq
wget https://ftp.gnu.org/gnu/glibc/glibc-2.31.tar.gz
tar -xzvf glibc-2.31.tar.gz
cd glibc-2.31
mkdir build && cd build
../configure --prefix=/usr --disable-profile --enable-add-ons --with-headers=/usr/include --with-binutils=/usr/bin
make
make install
strings /lib64/libc.so.6 | grep GLIBC
